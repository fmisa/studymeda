<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:dwr="http://www.directwebremoting.org/schema/spring-dwr"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.directwebremoting.org/schema/spring-dwr 
       http://www.directwebremoting.org/schema/spring-dwr-3.0.xsd">

	<!-- DWR will scan all Spring managed beans containing @RemoteProxy or @RemoteMethod 
		annotations and register Creator proxies for them. This will NOT scan any 
		classes not managed by Spring. -->
	<dwr:annotation-config />

	<!-- DWR will scan the classpath and search classes containing @RemoteProxy 
		or @RemoteMethod annotations. This will register the beans and Creator proxies 
		for these classes. 
	-->
	<dwr:annotation-scan base-package="ca.studymedia" scanDataTransferObject="true" scanRemoteProxy="true" />

	<!-- DWR will map util.js and engine.js files to the dwrController. You 
		can then include this files as external Javascript references from your JSP -->
	<dwr:url-mapping />


	<!-- Some articles DWR 2.0.x, Spring 2.x, with Spring MVC http://www.butterdev.com/dwr/2008/02/dwr-20x-spring-2x-with-spring-mvc/ -->              

	<dwr:controller id="dwrController" debug="true">
	    <!-- <dwr:config-param name="activeReverseAjaxEnabled" value="true" />  -->
	</dwr:controller>

	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<property name="alwaysUseFullPath" value="true" />
		<property name="mappings">
			<props>
				<prop key="/dwr/**/*">dwrController</prop>
			</props>
		</property>
	</bean>

	<!-- This is required if you want to configure any beans not managed by 
		Spring. Leaving it enabled doesn't do any negative effects. Here's a sample 
		config: <dwr:configuration> <dwr:convert type="bean" class="org.krams.tutorial.CustomClass" 
		/> </dwr:configuration> -->
	<dwr:configuration>
		<dwr:convert type="bean" class="ca.studymedia.model.Category" />
	</dwr:configuration>

    <!-- NOLONGER NEEDED - SHARED CONFIG see contextStudyMedia.xml
    
    <bean id="studyMediaServiceDAO" class="ca.studymedia.dao.mybatis.StudyMediaServiceDAOImpl"/>
    
	<bean id="studyMediaService" class="ca.studymedia.service.impl.StudyMediaServiceImpl">
		<dwr:remote javascript="studyMediaService">
			<dwr:include method="getCategories" />
		</dwr:remote>
		<property name="studyMediaServiceDAO"  ref="studyMediaServiceDAO"/>
		//<aop:scoped-proxy proxy-target-class="false" />
	</bean>
	 -->
   
</beans>